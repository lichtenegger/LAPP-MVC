@model UI_BricoMarche.Models.InhaltModelle.ArtikelBearbeitenModell

@{
    ViewBag.Title = "Produkte";
    Layout = "~/Views/Shared/_InhaltLayout.cshtml";
}
@if (Model.ID == 0)
{
    <h2>Neues Produkt Anlegen</h2>
}
else
{
    <h2>Produkt Verwalten</h2>  
}

@using (Html.BeginForm("ProduktVerwalten", "Administration", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        @if (Model.ID != 0)
        {
            <div class="form-group row">
                <div class="col-md-2">
                    <img src="@Url.Action("ProduktBild", "Inhalt", new { ProduktID = Model.ID })" alt="Produkt-Bild" class="thumbnail" />
                </div>
            </div>
        }
        <div class="form-group">
            <label class="control-label col-md-2">Neues Bild:</label>
            <div class="col-md-10" style="margin-top:5px">
                <input type="file" accept="image/*" name="neuesBild"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bezeichnung, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bezeichnung, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bezeichnung, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Preis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Preis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Preis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Kategorie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.KategorieID,
                                       new SelectList(Model.Kategorien, "ID", ""),
                                       new { htmlAttributes = new { @class = "form-control" } })


                @Html.ValidationMessageFor(model => model.KategorieID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Langbeschreibung, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Langbeschreibung, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Langbeschreibung, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.ID != 0)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Aktiv, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Aktiv)
                        @Html.ValidationMessageFor(model => model.Aktiv, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.Aktiv)
        }



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Speichern" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
