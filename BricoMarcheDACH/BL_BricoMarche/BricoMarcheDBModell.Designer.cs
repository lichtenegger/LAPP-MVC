//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BricoMarcheDBModell", "FK_Artikel_Kategorie", "Kategorie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BL_BricoMarche.Kategorie), "Artikel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Artikel), true)]
[assembly: EdmRelationshipAttribute("BricoMarcheDBModell", "FK_Benutzer_Gruppe", "Gruppe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BL_BricoMarche.Gruppe), "Benutzer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Benutzer), true)]
[assembly: EdmRelationshipAttribute("BricoMarcheDBModell", "FK_Benutzer_Ort", "Ort", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BL_BricoMarche.Ort), "Benutzer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Benutzer), true)]
[assembly: EdmRelationshipAttribute("BricoMarcheDBModell", "FK_Video_Kategorie", "Kategorie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BL_BricoMarche.Kategorie), "Video", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Video), true)]
[assembly: EdmRelationshipAttribute("BricoMarcheDBModell", "FK_Ort_Land", "Land", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BL_BricoMarche.Land), "Ort", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Ort), true)]
[assembly: EdmRelationshipAttribute("BricoMarcheDBModell", "Artikel_Video", "Artikel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Artikel), "Video", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Video))]
[assembly: EdmRelationshipAttribute("BricoMarcheDBModell", "Benutzer_Artikel", "Artikel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Artikel), "Benutzer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Benutzer))]
[assembly: EdmRelationshipAttribute("BricoMarcheDBModell", "Benutzer_Video", "Benutzer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Benutzer), "Video", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Video))]
[assembly: EdmRelationshipAttribute("BricoMarcheDBModell", "Video_Schlagwort", "Schlagwort", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Schlagwort), "Video", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BL_BricoMarche.Video))]

#endregion

namespace BL_BricoMarche
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BricoMarcheDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BricoMarcheDBEntities object using the connection string found in the 'BricoMarcheDBEntities' section of the application configuration file.
        /// </summary>
        public BricoMarcheDBEntities() : base("name=BricoMarcheDBEntities", "BricoMarcheDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BricoMarcheDBEntities object.
        /// </summary>
        public BricoMarcheDBEntities(string connectionString) : base(connectionString, "BricoMarcheDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BricoMarcheDBEntities object.
        /// </summary>
        public BricoMarcheDBEntities(EntityConnection connection) : base(connection, "BricoMarcheDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Artikel> AlleArtikel
        {
            get
            {
                if ((_AlleArtikel == null))
                {
                    _AlleArtikel = base.CreateObjectSet<Artikel>("AlleArtikel");
                }
                return _AlleArtikel;
            }
        }
        private ObjectSet<Artikel> _AlleArtikel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Benutzer> AlleBenutzer
        {
            get
            {
                if ((_AlleBenutzer == null))
                {
                    _AlleBenutzer = base.CreateObjectSet<Benutzer>("AlleBenutzer");
                }
                return _AlleBenutzer;
            }
        }
        private ObjectSet<Benutzer> _AlleBenutzer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gruppe> AlleGruppen
        {
            get
            {
                if ((_AlleGruppen == null))
                {
                    _AlleGruppen = base.CreateObjectSet<Gruppe>("AlleGruppen");
                }
                return _AlleGruppen;
            }
        }
        private ObjectSet<Gruppe> _AlleGruppen;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Kategorie> AlleKategorien
        {
            get
            {
                if ((_AlleKategorien == null))
                {
                    _AlleKategorien = base.CreateObjectSet<Kategorie>("AlleKategorien");
                }
                return _AlleKategorien;
            }
        }
        private ObjectSet<Kategorie> _AlleKategorien;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Land> AlleLaender
        {
            get
            {
                if ((_AlleLaender == null))
                {
                    _AlleLaender = base.CreateObjectSet<Land>("AlleLaender");
                }
                return _AlleLaender;
            }
        }
        private ObjectSet<Land> _AlleLaender;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ort> AlleOrt
        {
            get
            {
                if ((_AlleOrt == null))
                {
                    _AlleOrt = base.CreateObjectSet<Ort>("AlleOrt");
                }
                return _AlleOrt;
            }
        }
        private ObjectSet<Ort> _AlleOrt;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Schlagwort> AlleSchlagwoerter
        {
            get
            {
                if ((_AlleSchlagwoerter == null))
                {
                    _AlleSchlagwoerter = base.CreateObjectSet<Schlagwort>("AlleSchlagwoerter");
                }
                return _AlleSchlagwoerter;
            }
        }
        private ObjectSet<Schlagwort> _AlleSchlagwoerter;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Video> AlleVideos
        {
            get
            {
                if ((_AlleVideos == null))
                {
                    _AlleVideos = base.CreateObjectSet<Video>("AlleVideos");
                }
                return _AlleVideos;
            }
        }
        private ObjectSet<Video> _AlleVideos;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlleArtikel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlleArtikel(Artikel artikel)
        {
            base.AddObject("AlleArtikel", artikel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlleBenutzer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlleBenutzer(Benutzer benutzer)
        {
            base.AddObject("AlleBenutzer", benutzer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlleGruppen EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlleGruppen(Gruppe gruppe)
        {
            base.AddObject("AlleGruppen", gruppe);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlleKategorien EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlleKategorien(Kategorie kategorie)
        {
            base.AddObject("AlleKategorien", kategorie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlleLaender EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlleLaender(Land land)
        {
            base.AddObject("AlleLaender", land);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlleOrt EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlleOrt(Ort ort)
        {
            base.AddObject("AlleOrt", ort);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlleSchlagwoerter EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlleSchlagwoerter(Schlagwort schlagwort)
        {
            base.AddObject("AlleSchlagwoerter", schlagwort);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlleVideos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlleVideos(Video video)
        {
            base.AddObject("AlleVideos", video);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BricoMarcheDBModell", Name="Artikel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Artikel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Artikel object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="bezeichnung">Initial value of the Bezeichnung property.</param>
        /// <param name="preis">Initial value of the Preis property.</param>
        /// <param name="aktiv">Initial value of the Aktiv property.</param>
        /// <param name="bild">Initial value of the Bild property.</param>
        /// <param name="kategorie_ID">Initial value of the Kategorie_ID property.</param>
        public static Artikel CreateArtikel(global::System.Int32 id, global::System.String bezeichnung, global::System.Decimal preis, global::System.Boolean aktiv, global::System.Byte[] bild, global::System.Int32 kategorie_ID)
        {
            Artikel artikel = new Artikel();
            artikel.ID = id;
            artikel.Bezeichnung = bezeichnung;
            artikel.Preis = preis;
            artikel.Aktiv = aktiv;
            artikel.Bild = bild;
            artikel.Kategorie_ID = kategorie_ID;
            return artikel;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bezeichnung
        {
            get
            {
                return _Bezeichnung;
            }
            set
            {
                OnBezeichnungChanging(value);
                ReportPropertyChanging("Bezeichnung");
                _Bezeichnung = StructuralObject.SetValidValue(value, false, "Bezeichnung");
                ReportPropertyChanged("Bezeichnung");
                OnBezeichnungChanged();
            }
        }
        private global::System.String _Bezeichnung;
        partial void OnBezeichnungChanging(global::System.String value);
        partial void OnBezeichnungChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Preis
        {
            get
            {
                return _Preis;
            }
            set
            {
                OnPreisChanging(value);
                ReportPropertyChanging("Preis");
                _Preis = StructuralObject.SetValidValue(value, "Preis");
                ReportPropertyChanged("Preis");
                OnPreisChanged();
            }
        }
        private global::System.Decimal _Preis;
        partial void OnPreisChanging(global::System.Decimal value);
        partial void OnPreisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Aktiv
        {
            get
            {
                return _Aktiv;
            }
            set
            {
                OnAktivChanging(value);
                ReportPropertyChanging("Aktiv");
                _Aktiv = StructuralObject.SetValidValue(value, "Aktiv");
                ReportPropertyChanged("Aktiv");
                OnAktivChanged();
            }
        }
        private global::System.Boolean _Aktiv;
        partial void OnAktivChanging(global::System.Boolean value);
        partial void OnAktivChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Beschreibung
        {
            get
            {
                return _Beschreibung;
            }
            set
            {
                OnBeschreibungChanging(value);
                ReportPropertyChanging("Beschreibung");
                _Beschreibung = StructuralObject.SetValidValue(value, true, "Beschreibung");
                ReportPropertyChanged("Beschreibung");
                OnBeschreibungChanged();
            }
        }
        private global::System.String _Beschreibung;
        partial void OnBeschreibungChanging(global::System.String value);
        partial void OnBeschreibungChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Bild
        {
            get
            {
                return StructuralObject.GetValidValue(_Bild);
            }
            set
            {
                OnBildChanging(value);
                ReportPropertyChanging("Bild");
                _Bild = StructuralObject.SetValidValue(value, false, "Bild");
                ReportPropertyChanged("Bild");
                OnBildChanged();
            }
        }
        private global::System.Byte[] _Bild;
        partial void OnBildChanging(global::System.Byte[] value);
        partial void OnBildChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Kategorie_ID
        {
            get
            {
                return _Kategorie_ID;
            }
            set
            {
                OnKategorie_IDChanging(value);
                ReportPropertyChanging("Kategorie_ID");
                _Kategorie_ID = StructuralObject.SetValidValue(value, "Kategorie_ID");
                ReportPropertyChanged("Kategorie_ID");
                OnKategorie_IDChanged();
            }
        }
        private global::System.Int32 _Kategorie_ID;
        partial void OnKategorie_IDChanging(global::System.Int32 value);
        partial void OnKategorie_IDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "FK_Artikel_Kategorie", "Kategorie")]
        public Kategorie EineKategorie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Kategorie>("BricoMarcheDBModell.FK_Artikel_Kategorie", "Kategorie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Kategorie>("BricoMarcheDBModell.FK_Artikel_Kategorie", "Kategorie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Kategorie> EineKategorieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Kategorie>("BricoMarcheDBModell.FK_Artikel_Kategorie", "Kategorie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Kategorie>("BricoMarcheDBModell.FK_Artikel_Kategorie", "Kategorie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "Artikel_Video", "Video")]
        public EntityCollection<Video> VerlinkteVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Video>("BricoMarcheDBModell.Artikel_Video", "Video");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Video>("BricoMarcheDBModell.Artikel_Video", "Video", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "Benutzer_Artikel", "Benutzer")]
        public EntityCollection<Benutzer> GemerkteBenutzer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Benutzer>("BricoMarcheDBModell.Benutzer_Artikel", "Benutzer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Benutzer>("BricoMarcheDBModell.Benutzer_Artikel", "Benutzer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BricoMarcheDBModell", Name="Benutzer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Benutzer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Benutzer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="benutzername">Initial value of the Benutzername property.</param>
        /// <param name="vorname">Initial value of the Vorname property.</param>
        /// <param name="nachname">Initial value of the Nachname property.</param>
        /// <param name="geburtsdatum">Initial value of the Geburtsdatum property.</param>
        /// <param name="passwort">Initial value of the Passwort property.</param>
        /// <param name="aktiv">Initial value of the Aktiv property.</param>
        /// <param name="adresse">Initial value of the Adresse property.</param>
        /// <param name="ort_ID">Initial value of the Ort_ID property.</param>
        /// <param name="gruppe_ID">Initial value of the Gruppe_ID property.</param>
        public static Benutzer CreateBenutzer(global::System.Int32 id, global::System.String benutzername, global::System.String vorname, global::System.String nachname, global::System.DateTime geburtsdatum, global::System.Byte[] passwort, global::System.Boolean aktiv, global::System.String adresse, global::System.Int32 ort_ID, global::System.Int32 gruppe_ID)
        {
            Benutzer benutzer = new Benutzer();
            benutzer.ID = id;
            benutzer.Benutzername = benutzername;
            benutzer.Vorname = vorname;
            benutzer.Nachname = nachname;
            benutzer.Geburtsdatum = geburtsdatum;
            benutzer.Passwort = passwort;
            benutzer.Aktiv = aktiv;
            benutzer.Adresse = adresse;
            benutzer.Ort_ID = ort_ID;
            benutzer.Gruppe_ID = gruppe_ID;
            return benutzer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Benutzername
        {
            get
            {
                return _Benutzername;
            }
            set
            {
                OnBenutzernameChanging(value);
                ReportPropertyChanging("Benutzername");
                _Benutzername = StructuralObject.SetValidValue(value, false, "Benutzername");
                ReportPropertyChanged("Benutzername");
                OnBenutzernameChanged();
            }
        }
        private global::System.String _Benutzername;
        partial void OnBenutzernameChanging(global::System.String value);
        partial void OnBenutzernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Vorname
        {
            get
            {
                return _Vorname;
            }
            set
            {
                OnVornameChanging(value);
                ReportPropertyChanging("Vorname");
                _Vorname = StructuralObject.SetValidValue(value, false, "Vorname");
                ReportPropertyChanged("Vorname");
                OnVornameChanged();
            }
        }
        private global::System.String _Vorname;
        partial void OnVornameChanging(global::System.String value);
        partial void OnVornameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nachname
        {
            get
            {
                return _Nachname;
            }
            set
            {
                OnNachnameChanging(value);
                ReportPropertyChanging("Nachname");
                _Nachname = StructuralObject.SetValidValue(value, false, "Nachname");
                ReportPropertyChanged("Nachname");
                OnNachnameChanged();
            }
        }
        private global::System.String _Nachname;
        partial void OnNachnameChanging(global::System.String value);
        partial void OnNachnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Geburtsdatum
        {
            get
            {
                return _Geburtsdatum;
            }
            set
            {
                OnGeburtsdatumChanging(value);
                ReportPropertyChanging("Geburtsdatum");
                _Geburtsdatum = StructuralObject.SetValidValue(value, "Geburtsdatum");
                ReportPropertyChanged("Geburtsdatum");
                OnGeburtsdatumChanged();
            }
        }
        private global::System.DateTime _Geburtsdatum;
        partial void OnGeburtsdatumChanging(global::System.DateTime value);
        partial void OnGeburtsdatumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Passwort
        {
            get
            {
                return StructuralObject.GetValidValue(_Passwort);
            }
            set
            {
                OnPasswortChanging(value);
                ReportPropertyChanging("Passwort");
                _Passwort = StructuralObject.SetValidValue(value, false, "Passwort");
                ReportPropertyChanged("Passwort");
                OnPasswortChanged();
            }
        }
        private global::System.Byte[] _Passwort;
        partial void OnPasswortChanging(global::System.Byte[] value);
        partial void OnPasswortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Aktiv
        {
            get
            {
                return _Aktiv;
            }
            set
            {
                OnAktivChanging(value);
                ReportPropertyChanging("Aktiv");
                _Aktiv = StructuralObject.SetValidValue(value, "Aktiv");
                ReportPropertyChanged("Aktiv");
                OnAktivChanged();
            }
        }
        private global::System.Boolean _Aktiv;
        partial void OnAktivChanging(global::System.Boolean value);
        partial void OnAktivChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Adresse
        {
            get
            {
                return _Adresse;
            }
            set
            {
                OnAdresseChanging(value);
                ReportPropertyChanging("Adresse");
                _Adresse = StructuralObject.SetValidValue(value, false, "Adresse");
                ReportPropertyChanged("Adresse");
                OnAdresseChanged();
            }
        }
        private global::System.String _Adresse;
        partial void OnAdresseChanging(global::System.String value);
        partial void OnAdresseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ort_ID
        {
            get
            {
                return _Ort_ID;
            }
            set
            {
                OnOrt_IDChanging(value);
                ReportPropertyChanging("Ort_ID");
                _Ort_ID = StructuralObject.SetValidValue(value, "Ort_ID");
                ReportPropertyChanged("Ort_ID");
                OnOrt_IDChanged();
            }
        }
        private global::System.Int32 _Ort_ID;
        partial void OnOrt_IDChanging(global::System.Int32 value);
        partial void OnOrt_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Gruppe_ID
        {
            get
            {
                return _Gruppe_ID;
            }
            set
            {
                OnGruppe_IDChanging(value);
                ReportPropertyChanging("Gruppe_ID");
                _Gruppe_ID = StructuralObject.SetValidValue(value, "Gruppe_ID");
                ReportPropertyChanged("Gruppe_ID");
                OnGruppe_IDChanged();
            }
        }
        private global::System.Int32 _Gruppe_ID;
        partial void OnGruppe_IDChanging(global::System.Int32 value);
        partial void OnGruppe_IDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "FK_Benutzer_Gruppe", "Gruppe")]
        public Gruppe EineGruppe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gruppe>("BricoMarcheDBModell.FK_Benutzer_Gruppe", "Gruppe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gruppe>("BricoMarcheDBModell.FK_Benutzer_Gruppe", "Gruppe").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gruppe> EineGruppeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gruppe>("BricoMarcheDBModell.FK_Benutzer_Gruppe", "Gruppe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gruppe>("BricoMarcheDBModell.FK_Benutzer_Gruppe", "Gruppe", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "FK_Benutzer_Ort", "Ort")]
        public Ort EinOrt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ort>("BricoMarcheDBModell.FK_Benutzer_Ort", "Ort").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ort>("BricoMarcheDBModell.FK_Benutzer_Ort", "Ort").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ort> EinOrtReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ort>("BricoMarcheDBModell.FK_Benutzer_Ort", "Ort");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ort>("BricoMarcheDBModell.FK_Benutzer_Ort", "Ort", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "Benutzer_Artikel", "Artikel")]
        public EntityCollection<Artikel> GemerkteArtikel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Artikel>("BricoMarcheDBModell.Benutzer_Artikel", "Artikel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Artikel>("BricoMarcheDBModell.Benutzer_Artikel", "Artikel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "Benutzer_Video", "Video")]
        public EntityCollection<Video> GemerkteVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Video>("BricoMarcheDBModell.Benutzer_Video", "Video");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Video>("BricoMarcheDBModell.Benutzer_Video", "Video", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BricoMarcheDBModell", Name="Gruppe")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gruppe : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gruppe object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Gruppe CreateGruppe(global::System.Int32 id)
        {
            Gruppe gruppe = new Gruppe();
            gruppe.ID = id;
            return gruppe;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bezeichnung
        {
            get
            {
                return _Bezeichnung;
            }
            set
            {
                OnBezeichnungChanging(value);
                ReportPropertyChanging("Bezeichnung");
                _Bezeichnung = StructuralObject.SetValidValue(value, true, "Bezeichnung");
                ReportPropertyChanged("Bezeichnung");
                OnBezeichnungChanged();
            }
        }
        private global::System.String _Bezeichnung;
        partial void OnBezeichnungChanging(global::System.String value);
        partial void OnBezeichnungChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "FK_Benutzer_Gruppe", "Benutzer")]
        public EntityCollection<Benutzer> VieleBenutzer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Benutzer>("BricoMarcheDBModell.FK_Benutzer_Gruppe", "Benutzer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Benutzer>("BricoMarcheDBModell.FK_Benutzer_Gruppe", "Benutzer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BricoMarcheDBModell", Name="Kategorie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Kategorie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Kategorie object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="bezeichnung">Initial value of the Bezeichnung property.</param>
        public static Kategorie CreateKategorie(global::System.Int32 id, global::System.String bezeichnung)
        {
            Kategorie kategorie = new Kategorie();
            kategorie.ID = id;
            kategorie.Bezeichnung = bezeichnung;
            return kategorie;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bezeichnung
        {
            get
            {
                return _Bezeichnung;
            }
            set
            {
                OnBezeichnungChanging(value);
                ReportPropertyChanging("Bezeichnung");
                _Bezeichnung = StructuralObject.SetValidValue(value, false, "Bezeichnung");
                ReportPropertyChanged("Bezeichnung");
                OnBezeichnungChanged();
            }
        }
        private global::System.String _Bezeichnung;
        partial void OnBezeichnungChanging(global::System.String value);
        partial void OnBezeichnungChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "FK_Artikel_Kategorie", "Artikel")]
        public EntityCollection<Artikel> VieleArtikel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Artikel>("BricoMarcheDBModell.FK_Artikel_Kategorie", "Artikel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Artikel>("BricoMarcheDBModell.FK_Artikel_Kategorie", "Artikel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "FK_Video_Kategorie", "Video")]
        public EntityCollection<Video> VieleVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Video>("BricoMarcheDBModell.FK_Video_Kategorie", "Video");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Video>("BricoMarcheDBModell.FK_Video_Kategorie", "Video", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BricoMarcheDBModell", Name="Land")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Land : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Land object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="bezeichnung">Initial value of the Bezeichnung property.</param>
        public static Land CreateLand(global::System.Int32 id, global::System.String bezeichnung)
        {
            Land land = new Land();
            land.ID = id;
            land.Bezeichnung = bezeichnung;
            return land;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bezeichnung
        {
            get
            {
                return _Bezeichnung;
            }
            set
            {
                OnBezeichnungChanging(value);
                ReportPropertyChanging("Bezeichnung");
                _Bezeichnung = StructuralObject.SetValidValue(value, false, "Bezeichnung");
                ReportPropertyChanged("Bezeichnung");
                OnBezeichnungChanged();
            }
        }
        private global::System.String _Bezeichnung;
        partial void OnBezeichnungChanging(global::System.String value);
        partial void OnBezeichnungChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "FK_Ort_Land", "Ort")]
        public EntityCollection<Ort> VieleOrte
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ort>("BricoMarcheDBModell.FK_Ort_Land", "Ort");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ort>("BricoMarcheDBModell.FK_Ort_Land", "Ort", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BricoMarcheDBModell", Name="Ort")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ort : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ort object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="bezeichnung">Initial value of the Bezeichnung property.</param>
        /// <param name="pLZ">Initial value of the PLZ property.</param>
        /// <param name="land_ID">Initial value of the Land_ID property.</param>
        public static Ort CreateOrt(global::System.Int32 id, global::System.String bezeichnung, global::System.String pLZ, global::System.Int32 land_ID)
        {
            Ort ort = new Ort();
            ort.ID = id;
            ort.Bezeichnung = bezeichnung;
            ort.PLZ = pLZ;
            ort.Land_ID = land_ID;
            return ort;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bezeichnung
        {
            get
            {
                return _Bezeichnung;
            }
            set
            {
                OnBezeichnungChanging(value);
                ReportPropertyChanging("Bezeichnung");
                _Bezeichnung = StructuralObject.SetValidValue(value, false, "Bezeichnung");
                ReportPropertyChanged("Bezeichnung");
                OnBezeichnungChanged();
            }
        }
        private global::System.String _Bezeichnung;
        partial void OnBezeichnungChanging(global::System.String value);
        partial void OnBezeichnungChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PLZ
        {
            get
            {
                return _PLZ;
            }
            set
            {
                OnPLZChanging(value);
                ReportPropertyChanging("PLZ");
                _PLZ = StructuralObject.SetValidValue(value, false, "PLZ");
                ReportPropertyChanged("PLZ");
                OnPLZChanged();
            }
        }
        private global::System.String _PLZ;
        partial void OnPLZChanging(global::System.String value);
        partial void OnPLZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Land_ID
        {
            get
            {
                return _Land_ID;
            }
            set
            {
                OnLand_IDChanging(value);
                ReportPropertyChanging("Land_ID");
                _Land_ID = StructuralObject.SetValidValue(value, "Land_ID");
                ReportPropertyChanged("Land_ID");
                OnLand_IDChanged();
            }
        }
        private global::System.Int32 _Land_ID;
        partial void OnLand_IDChanging(global::System.Int32 value);
        partial void OnLand_IDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "FK_Benutzer_Ort", "Benutzer")]
        public EntityCollection<Benutzer> VieleBenutzer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Benutzer>("BricoMarcheDBModell.FK_Benutzer_Ort", "Benutzer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Benutzer>("BricoMarcheDBModell.FK_Benutzer_Ort", "Benutzer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "FK_Ort_Land", "Land")]
        public Land EinLand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Land>("BricoMarcheDBModell.FK_Ort_Land", "Land").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Land>("BricoMarcheDBModell.FK_Ort_Land", "Land").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Land> EinLandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Land>("BricoMarcheDBModell.FK_Ort_Land", "Land");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Land>("BricoMarcheDBModell.FK_Ort_Land", "Land", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BricoMarcheDBModell", Name="Schlagwort")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Schlagwort : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Schlagwort object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="bezeichnung">Initial value of the Bezeichnung property.</param>
        public static Schlagwort CreateSchlagwort(global::System.Int32 id, global::System.String bezeichnung)
        {
            Schlagwort schlagwort = new Schlagwort();
            schlagwort.ID = id;
            schlagwort.Bezeichnung = bezeichnung;
            return schlagwort;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bezeichnung
        {
            get
            {
                return _Bezeichnung;
            }
            set
            {
                OnBezeichnungChanging(value);
                ReportPropertyChanging("Bezeichnung");
                _Bezeichnung = StructuralObject.SetValidValue(value, false, "Bezeichnung");
                ReportPropertyChanged("Bezeichnung");
                OnBezeichnungChanged();
            }
        }
        private global::System.String _Bezeichnung;
        partial void OnBezeichnungChanging(global::System.String value);
        partial void OnBezeichnungChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "Video_Schlagwort", "Video")]
        public EntityCollection<Video> VieleVideos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Video>("BricoMarcheDBModell.Video_Schlagwort", "Video");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Video>("BricoMarcheDBModell.Video_Schlagwort", "Video", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BricoMarcheDBModell", Name="Video")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Video : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Video object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="bezeichnung">Initial value of the Bezeichnung property.</param>
        /// <param name="aktiv">Initial value of the Aktiv property.</param>
        /// <param name="bild">Initial value of the Bild property.</param>
        /// <param name="pfad">Initial value of the Pfad property.</param>
        /// <param name="kategorie_ID">Initial value of the Kategorie_ID property.</param>
        public static Video CreateVideo(global::System.Int32 id, global::System.String bezeichnung, global::System.Boolean aktiv, global::System.Byte[] bild, global::System.String pfad, global::System.Int32 kategorie_ID)
        {
            Video video = new Video();
            video.ID = id;
            video.Bezeichnung = bezeichnung;
            video.Aktiv = aktiv;
            video.Bild = bild;
            video.Pfad = pfad;
            video.Kategorie_ID = kategorie_ID;
            return video;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bezeichnung
        {
            get
            {
                return _Bezeichnung;
            }
            set
            {
                OnBezeichnungChanging(value);
                ReportPropertyChanging("Bezeichnung");
                _Bezeichnung = StructuralObject.SetValidValue(value, false, "Bezeichnung");
                ReportPropertyChanged("Bezeichnung");
                OnBezeichnungChanged();
            }
        }
        private global::System.String _Bezeichnung;
        partial void OnBezeichnungChanging(global::System.String value);
        partial void OnBezeichnungChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Aktiv
        {
            get
            {
                return _Aktiv;
            }
            set
            {
                OnAktivChanging(value);
                ReportPropertyChanging("Aktiv");
                _Aktiv = StructuralObject.SetValidValue(value, "Aktiv");
                ReportPropertyChanged("Aktiv");
                OnAktivChanged();
            }
        }
        private global::System.Boolean _Aktiv;
        partial void OnAktivChanging(global::System.Boolean value);
        partial void OnAktivChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Beschreibung
        {
            get
            {
                return _Beschreibung;
            }
            set
            {
                OnBeschreibungChanging(value);
                ReportPropertyChanging("Beschreibung");
                _Beschreibung = StructuralObject.SetValidValue(value, true, "Beschreibung");
                ReportPropertyChanged("Beschreibung");
                OnBeschreibungChanged();
            }
        }
        private global::System.String _Beschreibung;
        partial void OnBeschreibungChanging(global::System.String value);
        partial void OnBeschreibungChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Bild
        {
            get
            {
                return StructuralObject.GetValidValue(_Bild);
            }
            set
            {
                OnBildChanging(value);
                ReportPropertyChanging("Bild");
                _Bild = StructuralObject.SetValidValue(value, false, "Bild");
                ReportPropertyChanged("Bild");
                OnBildChanged();
            }
        }
        private global::System.Byte[] _Bild;
        partial void OnBildChanging(global::System.Byte[] value);
        partial void OnBildChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pfad
        {
            get
            {
                return _Pfad;
            }
            set
            {
                OnPfadChanging(value);
                ReportPropertyChanging("Pfad");
                _Pfad = StructuralObject.SetValidValue(value, false, "Pfad");
                ReportPropertyChanged("Pfad");
                OnPfadChanged();
            }
        }
        private global::System.String _Pfad;
        partial void OnPfadChanging(global::System.String value);
        partial void OnPfadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Kategorie_ID
        {
            get
            {
                return _Kategorie_ID;
            }
            set
            {
                OnKategorie_IDChanging(value);
                ReportPropertyChanging("Kategorie_ID");
                _Kategorie_ID = StructuralObject.SetValidValue(value, "Kategorie_ID");
                ReportPropertyChanged("Kategorie_ID");
                OnKategorie_IDChanged();
            }
        }
        private global::System.Int32 _Kategorie_ID;
        partial void OnKategorie_IDChanging(global::System.Int32 value);
        partial void OnKategorie_IDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "FK_Video_Kategorie", "Kategorie")]
        public Kategorie EineKategorie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Kategorie>("BricoMarcheDBModell.FK_Video_Kategorie", "Kategorie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Kategorie>("BricoMarcheDBModell.FK_Video_Kategorie", "Kategorie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Kategorie> EineKategorieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Kategorie>("BricoMarcheDBModell.FK_Video_Kategorie", "Kategorie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Kategorie>("BricoMarcheDBModell.FK_Video_Kategorie", "Kategorie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "Artikel_Video", "Artikel")]
        public EntityCollection<Artikel> VerlinkteArtikel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Artikel>("BricoMarcheDBModell.Artikel_Video", "Artikel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Artikel>("BricoMarcheDBModell.Artikel_Video", "Artikel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "Benutzer_Video", "Benutzer")]
        public EntityCollection<Benutzer> GemerkteBenutzer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Benutzer>("BricoMarcheDBModell.Benutzer_Video", "Benutzer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Benutzer>("BricoMarcheDBModell.Benutzer_Video", "Benutzer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BricoMarcheDBModell", "Video_Schlagwort", "Schlagwort")]
        public EntityCollection<Schlagwort> VieleSchlagwoerter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Schlagwort>("BricoMarcheDBModell.Video_Schlagwort", "Schlagwort");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Schlagwort>("BricoMarcheDBModell.Video_Schlagwort", "Schlagwort", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
